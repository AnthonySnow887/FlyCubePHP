############### Additional required PHP modules #####################

- php7-pcntl


############### Start process from Apache user ######################

1. login by root user

2. run command:

su -s /bin/bash -l wwwrun -c '/opt/FlyCubePHP/test.php &'


############### APACHE Conf #########################################

# ----------------------------------------------------------------
# NOTE: This is config for rpm-base systems (CentOS, OpenSUSE...)
# ----------------------------------------------------------------

# --- Proxy mode (NOTE: Web-sockets working) ---
LoadModule proxy_module /usr/lib64/apache2/mod_proxy.so
LoadModule proxy_http_module /usr/lib64/apache2/mod_proxy_http.so
LoadModule proxy_wstunnel_module /usr/lib64/apache2/mod_proxy_wstunnel.so

# --- For listen eny port ---
Listen 8080
<VirtualHost *:8080>
    # Set your server name
    #ServerName my-server.com

    Alias /ws-future "/opt/ws-future"

    <Location /ws-future/cable >
        ProxyPass "ws://127.0.0.1:8000/cable"
        ProxyPassReverse "ws://127.0.0.1:8000/cable"
        RewriteEngine on
        RewriteCond %{HTTP:Upgrade} websocket [NC]
        RewriteCond %{HTTP:Connection} upgrade [NC]
        RewriteRule ^/?(.*) "ws://127.0.0.1:8000/cable" [P,L]
    </Location>


    <Directory "/opt/ws-future">
      Options Indexes FollowSymLinks
      Require all granted

      # Redirect all requests to index.php
      RewriteEngine On
      RewriteBase /ws-future
      RewriteRule ^(.+)$ index.php [QSA,L]
   </Directory>
   
</VirtualHost>


############### JS Example #########################################

App.cable.subscriptions.create( {
        channel: 'EventsChannel',
        stream_name: 'test-channel'
    }, {
        connected: function () {
            console.log("EventsChannel::test-channel CONNECTED");
        },
        disconnected: function () {
            console.log("EventsChannel::test-channel DISCONNECTED");
        },
        received: function (data) {
            console.log("EventsChannel::test-channel; DATA: ", data);
        }
    });


############### Messages #########################################

CLIENT-SEND:

{
  "command": "subscribe",
  "identifier": "{\"channel\":\"EventsChannel\",\"stream_name\":\"storage_data_events\"}"
}


CLIENT-RECEIVED:

1. after in connect:

{
  "type":"welcome"
}


2. after input "subscribe" (see SEND):

{
  "identifier": "{\"channel\":\"EventsChannel\",\"stream_name\":\"storage_data_events\"}",
  "type": "confirm_subscription" // <--- or "reject_subscription"
}


3. after send "confirm_subscription" every second:

{
  "type":"ping",
  "message":1640255398 // <-- this is current DateTime UTC
}


4. messages (данные высылаются только конкретному адресату по имени канала):

{
  "identifier": "{\"channel\":\"EventsChannel\",\"stream_name\":\"storage_data_events\"}",
  "message": {
    "command": "UPDATE",
    "guid": "2d0480b8-d5d7-41fc-9a78-39105fc80cd1"
  }
}

5. Client send unsubscribe (сервер обрабатывает, но не отвечает):

{
    "command": "unsubscribe",
    "identifier": "{\"channel\":\"EventsChannel\",\"stream_name\":\"test-channel\"}"
}


######################## LOG Messaged ###################################

18:47:20 INFO: EventsChannel is transmitting the subscription confirmation
18:47:20 INFO: EventsChannel is streaming from test-channel
18:47:22 INFO: Unsubscribing from channel: {"channel":"EventsChannel","stream_name":"test-channel"}
18:47:22 INFO: EventsChannel stopped streaming from test-channel

16:36:26 DEBUG: [ActionCable] Broadcasting to storage_data_events: {:command=>"INSERT", :guid=>"b1b4f8a2-1a1d-4ed1-ba45-f92a43167e53"}
16:36:26 DEBUG: EventsChannel transmitting {"command"=>"INSERT", "guid"=>"b1b4f8a2-1a1d-4ed1-ba45-f92a43167e53"} (via streamed from storage_data_events)
